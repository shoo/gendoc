name: status

on:
  schedule:
    # ステータスの更新は毎日12:00(UTC)=21:00(JST)=05:00(シアトル)
    - cron: 0 12 * * *

jobs:
  # 各テストのジョブは以下の表に従って作成しています。
  # matrixを使って全て行うと大変なので、要所を搾って実施します。
  # No. OS      ARCH    COMPILER   UT  TT  BLD DOC COV
  #  1. Windows x86     dmd        o   x   x   x   x
  #  2. Windows x86     ldc        x   o   o   x   x
  #  3. Windows x86     dmd-master x   x   x   x   x
  #  4. Windows x86     ldc-master x   x   x   x   x
  #  5. Windows x86_64  dmd        o   o   x   x   o
  #  6. Windows x86_64  ldc        o   x   o   o   x
  #  7. Windows x86_64  dmd-master x   x   x   x   x
  #  8. Windows x86_64  ldc-master o   o   o   x   x
  #  9. Ubuntu  x86     dmd        x   x   x   x   x
  # 10. Ubuntu  x86     ldc        o   x   o   x   x
  # 11. Ubuntu  x86     dmd-master x   x   x   x   x
  # 12. Ubuntu  x86     ldc-master x   x   x   x   x
  # 13. Ubuntu  x86_64  dmd        o   x   o   O   x
  # 14. Ubuntu  x86_64  ldc        o   o   x   x   o
  # 15. Ubuntu  x86_64  dmd-master o   o   o   x   x
  # 16. Ubuntu  x86_64  ldc-master x   x   x   x   x
  # 17. macOS   x86     dmd        x   x   x   x   x
  # 18. macOS   x86     ldc        x   x   x   x   x
  # 19. macOS   x86     dmd-master x   x   x   x   x
  # 20. macOS   x86     ldc-master x   x   x   x   x
  # 21. macOS   x86_64  dmd        o   o   x   x   o
  # 22. macOS   x86_64  ldc        o   x   o   o   x
  # 23. macOS   x86_64  dmd-master x   x   x   x   x
  # 24. macOS   x86_64  ldc-master x   x   x   x   x

  # 各テストジョブは以下のテンプレを加工して作成します。
  # 例は test-linux-x86_64-ldc-latest を参照してください。
  # また upload-codecov はテストジョブが全てパスしてから
  # 実行されるようにするため、テストジョブを追加する場合は
  # upload-codecov の needs も忘れず追加してください。

  # テンプレ：
  #test-${OS}-${ARCH}-${COMPILER}:
  #  name: test-${OS}-${ARCH}-${COMPILER}
  #  runs-on: ${OS}
  #  steps:
  #    - uses: actions/checkout@v2
  #      with:
  #        ref: master
  #    - name: Install D compiler
  #      uses: dlang-community/setup-dlang@v1
  #      with:
  #        compiler: ${COMPILER}
  #    # UT:テストをする場合は以下を実行
  #    - name: Run unit tests
  #      run: rdmd ./scripts/runner.d -a=${ARCH} --mode=unit-test
  #    # TT:テストをする場合は以下を実行
  #    - name: Run unit tests
  #      run: rdmd ./scripts/runner.d -a=${ARCH} --mode=integration-test
  #    # BLD:ビルドをする場合は以下を実行
  #    - name: Build tests
  #      run: dub build -a=${ARCH} -b=release -c=default
  #    # DOC:ドキュメント生成をする場合は以下を実行
  #    - name: Generate document tests
  #      run: rdmd ./scripts/runner.d -a=${ARCH} --mode=generate-document
  #    # DOC:ドキュメントを記録する場合は以下を実行(Artifactに6か月保管されます)
  #    - name: Upload generated pages
  #      uses: actions/upload-artifact@v2
  #      with:
  #        name: docs
  #        path: docs
  #    # COV:カバレッジを記録する場合は以下を実行(Artifactに6か月保管されます)
  #    - name: Upload coverage result
  #      uses: actions/upload-artifact@v2
  #      with:
  #        name: coverage-${OS}
  #        path: .cov

  # No. OS      ARCH    COMPILER   UT  TT  BLD DOC COV
  #  1. Windows x86     dmd        o   x   x   x   x
  test-windows-x86-dmd-latest:
    name: test-windows-x86-dmd-latest
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: master
      - name: Install D compiler
        uses: dlang-community/setup-dlang@v1
        with:
          compiler: dmd-latest
      - name: Run unit tests
        run: rdmd ./scripts/runner.d -a=x86 --mode=unit-test

  # No. OS      ARCH    COMPILER   UT  TT  BLD DOC COV
  #  2. Windows x86     ldc        x   o   o   x   x
  test-windows-x86-ldc-latest:
    name: test-windows-x86-ldc-latest
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: master
      - name: Install D compiler
        uses: dlang-community/setup-dlang@v1
        with:
          compiler: ldc-latest
      - name: Run integration tests
        run: rdmd ./scripts/runner.d -a=x86 --mode=integration-test
      - name: Build tests
        run: dub build -a=x86 -b=release -c=default

  # No. OS      ARCH    COMPILER   UT  TT  BLD DOC COV
  #  3. Windows x86     dmd-master x   x   x   x   x
  # do-nothing

  # No. OS      ARCH    COMPILER   UT  TT  BLD DOC COV
  #  4. Windows x86     ldc-master x   x   x   x   x
  # do-nothing

  # No. OS      ARCH    COMPILER   UT  TT  BLD DOC COV
  #  5. Windows x86_64  dmd        o   o   x   x   o
  test-windows-x86_64-dmd-latest:
    name: test-windows-x86_64-dmd-latest
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: master
      - name: Install D compiler
        uses: dlang-community/setup-dlang@v1
        with:
          compiler: dmd-latest
      - name: Run unit tests
        run: rdmd ./scripts/runner.d -a=x86_64 --mode=unit-test
      - name: Run integration tests
        run: rdmd ./scripts/runner.d -a=x86_64 --mode=integration-test
      - name: Upload coverage result
        uses: actions/upload-artifact@v2
        with:
          name: coverage-windows
          path: .cov

  # No. OS      ARCH    COMPILER   UT  TT  BLD DOC COV
  #  6. Windows x86_64  ldc        o   x   o   o   x
  test-windows-x86_64-ldc-latest:
    name: test-windows-x86_64-ldc-latest
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: master
      - name: Install D compiler
        uses: dlang-community/setup-dlang@v1
        with:
          compiler: ldc-latest
      - name: Run unit tests
        run: rdmd ./scripts/runner.d -a=x86_64 --mode=unit-test
      - name: Build tests
        run: dub build -a=x86_64 -b=release -c=default
      - name: Generate document tests
        run: rdmd ./scripts/runner.d -a=x86_64 --mode=generate-document

  # No. OS      ARCH    COMPILER   UT  TT  BLD DOC COV
  #  7. Windows x86_64  dmd-master x   x   x   x   x
  # do-nothing

  # No. OS      ARCH    COMPILER   UT  TT  BLD DOC COV
  #  8. Windows x86_64  ldc-master o   o   o   x   x
  test-windows-x86_64-ldc-master:
    name: test-windows-x86_64-ldc-master
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: master
      - name: Install D compiler
        uses: dlang-community/setup-dlang@v1
        with:
          compiler: ldc-master
          gh_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Run unit tests
        run: rdmd ./scripts/runner.d -a=x86_64 --mode=unit-test
      - name: Run integration tests
        run: rdmd ./scripts/runner.d -a=x86_64 --mode=integration-test
      - name: Build tests
        run: dub build -a=x86_64 -b=release -c=default

  # No. OS      ARCH    COMPILER   UT  TT  BLD DOC COV
  #  9. Ubuntu  x86     dmd        x   x   x   x   x
  # do-nothing

  # No. OS      ARCH    COMPILER   UT  TT  BLD DOC COV
  # 10. Ubuntu  x86     ldc        o   x   o   x   x
  test-linux-x86-ldc-latest:
    name: test-linux-x86-ldc-latest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: master
      - name: Install D compiler
        uses: dlang-community/setup-dlang@v1
        with:
          compiler: ldc-latest
      - name: Install gcc-multilib
        run: |
          sudo apt update
          sudo apt install gcc-multilib
      - name: Run unit tests
        run: rdmd ./scripts/runner.d -a=x86 --mode=unit-test
      - name: Build tests
        run: dub build -a=x86 -b=release -c=default

  # No. OS      ARCH    COMPILER   UT  TT  BLD DOC COV
  # 11. Ubuntu  x86     dmd-master x   x   x   x   x
  # do-nothing

  # No. OS      ARCH    COMPILER   UT  TT  BLD DOC COV
  # 12. Ubuntu  x86     ldc-master x   x   x   x   x
  # do-nothing

  # No. OS      ARCH    COMPILER   UT  TT  BLD DOC COV
  # 13. Ubuntu  x86_64  dmd        o   x   o   O   x
  test-linux-x86_64-dmd-latest:
    name: test-linux-x86_64-dmd-latest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: master
      - name: Install D compiler
        uses: dlang-community/setup-dlang@v1
        with:
          compiler: dmd-latest
      - name: Run unit tests
        run: rdmd ./scripts/runner.d -a=x86_64 --mode=unit-test
      - name: Build tests
        run: dub build -a=x86_64 -b=release -c=default
      - name: Generate document tests
        run: rdmd ./scripts/runner.d -a=x86_64 --mode=generate-document
      - name: Upload generated pages
        uses: actions/upload-artifact@v2
        with:
          name: docs
          path: docs

  # No. OS      ARCH    COMPILER   UT  TT  BLD DOC COV
  # 14. Ubuntu  x86_64  ldc        o   o   x   x   o
  test-linux-x86_64-ldc-latest:
    name: test-linux-x86_64-ldc-latest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: master
      - name: Install D compiler
        uses: dlang-community/setup-dlang@v1
        with:
          compiler: ldc-latest
      - name: Run unit tests
        run: rdmd ./scripts/runner.d -a=x86_64 --mode=unit-test
      - name: Run integration tests
        run: rdmd ./scripts/runner.d -a=x86_64 --mode=integration-test
      - name: Upload coverage result
        uses: actions/upload-artifact@v2
        with:
          name: coverage-linux
          path: .cov

  # No. OS      ARCH    COMPILER   UT  TT  BLD DOC COV
  # 15. Ubuntu  x86_64  dmd-master o   o   o   x   x
  test-linux-x86_64-dmd-master:
    name: test-linux-x86_64-dmd-master
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: master
      - name: Install D compiler
        uses: dlang-community/setup-dlang@v1
        with:
          #compiler: dmd-master ... change to beta tempolarily
          compiler: dmd-beta
      - name: Run unit tests
        run: rdmd ./scripts/runner.d -a=x86_64 --mode=unit-test
      - name: Run integration tests
        run: rdmd ./scripts/runner.d -a=x86_64 --mode=integration-test
      - name: Build tests
        run: dub build -a=x86_64 -b=release -c=default

  # No. OS      ARCH    COMPILER   UT  TT  BLD DOC COV
  # 16. Ubuntu  x86_64  ldc-master x   x   x   x   x
  # do-nothing

  # No. OS      ARCH    COMPILER   UT  TT  BLD DOC COV
  # 17. macOS   x86     dmd        x   x   x   x   x
  # do-nothing

  # No. OS      ARCH    COMPILER   UT  TT  BLD DOC COV
  # 18. macOS   x86     ldc        x   x   x   x   x
  # do-nothing

  # No. OS      ARCH    COMPILER   UT  TT  BLD DOC COV
  # 19. macOS   x86     dmd-master x   x   x   x   x
  # do-nothing

  # No. OS      ARCH    COMPILER   UT  TT  BLD DOC COV
  # 20. macOS   x86     ldc-master x   x   x   x   x
  # do-nothing

  # No. OS      ARCH    COMPILER   UT  TT  BLD DOC COV
  # 21. macOS   x86_64  dmd        o   o   x   x   o
  test-osx-x86_64-dmd-latest:
    name: test-osx-x86_64-dmd-latest
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: master
      - name: Install D compiler
        uses: dlang-community/setup-dlang@v1
        with:
          compiler: dmd-latest
      - name: Run unit tests
        run: rdmd ./scripts/runner.d -a=x86_64 --mode=unit-test
      - name: Run integration tests
        run: rdmd ./scripts/runner.d -a=x86_64 --mode=integration-test
      - name: Upload coverage result
        uses: actions/upload-artifact@v2
        with:
          name: coverage-osx
          path: .cov


  # No. OS      ARCH    COMPILER   UT  TT  BLD DOC COV
  # 22. macOS   x86_64  ldc        o   x   o   o   x
  test-osx-x86_64-ldc-latest:
    name: test-osx-x86_64-ldc-latest
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: master
      - name: Install D compiler
        uses: dlang-community/setup-dlang@v1
        with:
          compiler: ldc-latest
      - name: Run unit tests
        run: rdmd ./scripts/runner.d -a=x86_64 --mode=unit-test
      - name: Build tests
        run: dub build -a=x86_64 -b=release -c=default
      - name: Generate document tests
        run: rdmd ./scripts/runner.d -a=x86_64 --mode=generate-document

  # No. OS      ARCH    COMPILER   UT  TT  BLD DOC COV
  # 23. macOS   x86_64  dmd-master x   x   x   x   x
  # do-nothing

  # No. OS      ARCH    COMPILER   UT  TT  BLD DOC COV
  # 24. macOS   x86_64  ldc-master x   x   x   x   x
  # do-nothing

  # Deploy Pages
  deproy-pages:
    name: deploy-pages
    needs: [test-windows-x86-dmd-latest, test-windows-x86-ldc-latest, test-windows-x86_64-dmd-latest, test-windows-x86_64-ldc-latest, test-windows-x86_64-ldc-master, test-linux-x86-ldc-latest, test-linux-x86_64-dmd-latest, test-linux-x86_64-ldc-latest, test-linux-x86_64-dmd-master, test-osx-x86_64-dmd-latest, test-osx-x86_64-ldc-latest]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download generated pages
        uses: actions/download-artifact@v4.1.7
        with:
          name: docs
          path: docs
      - name: Deploy pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          allow_empty_commit: false
          publish_dir: docs
          publish_branch: gh-pages
          user_name: GitHub Actions Bot
          user_email: <>
